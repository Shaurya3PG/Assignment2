{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OrderService = void 0;\nvar shopping_cart_service_1 = require(\"./shopping-cart.service\");\nvar database_1 = require(\"angularfire2/database\");\nvar i0 = require(\"@angular/core\");\nvar i1 = require(\"./shopping-cart.service\");\nvar OrderService = /** @class */function () {\n  function OrderService(db, shoppingCartService) {\n    this.db = db;\n    this.shoppingCartService = shoppingCartService;\n  }\n  OrderService.prototype.placeOrder = function (order) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.db.list('/orders').push(order)];\n          case 1:\n            result = _a.sent();\n            this.shoppingCartService.clearCart();\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  OrderService.prototype.getOrders = function () {\n    return this.db.list('/orders');\n  };\n  OrderService.prototype.getOrdersByUser = function (userId) {\n    return this.db.list('/orders', {\n      query: {\n        orderByChild: 'userId',\n        equalTo: userId\n      }\n    });\n  };\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac\n  });\n  return OrderService;\n}();\nexports.OrderService = OrderService;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAGA;EAGE,sBAAoBA,EAAuB,EAAUC,mBAAwC;IAAzE,OAAE,GAAFD,EAAE;IAA+B,wBAAmB,GAAnBC,mBAAmB;EAAyB;EAE3FC,iCAAU,GAAhB,UAAiBC,KAAK;;;;;;YACP,qBAAM,IAAI,CAACH,EAAE,CAACI,IAAI,CAAC,SAAS,CAAC,CAACC,IAAI,CAACF,KAAK,CAAC;;YAAlDG,MAAM,GAAGC,SAAyC;YACtD,IAAI,CAACN,mBAAmB,CAACO,SAAS,EAAE;YACpC,sBAAOF,MAAM;QAAC;;;GACf;EAEDJ,gCAAS,GAAT;IACE,OAAO,IAAI,CAACF,EAAE,CAACI,IAAI,CAAC,SAAS,CAAC;EAChC,CAAC;EAEDF,sCAAe,GAAf,UAAgBO,MAAc;IAC5B,OAAO,IAAI,CAACT,EAAE,CAACI,IAAI,CAAC,SAAS,EAAE;MAC7BM,KAAK,EAAE;QACLC,YAAY,EAAE,QAAQ;QACtBC,OAAO,EAAEH;;KAEZ,CAAC;EACJ,CAAC;;;;;WArBUP,YAAY;IAAAW,SAAZX,YAAY;EAAA;qBALzB;CA2BC,EAvBD;AACaY","names":["db","shoppingCartService","OrderService","order","list","push","result","_a","clearCart","userId","query","orderByChild","equalTo","factory","exports"],"sourceRoot":"","sources":["C:\\Angular\\routeShop\\src\\app\\shared\\services\\order.service.ts"],"sourcesContent":["import { ShoppingCartService } from './shopping-cart.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class OrderService {\n\n  constructor(private db: AngularFireDatabase, private shoppingCartService: ShoppingCartService) { }\n\n  async placeOrder(order) {\n    let result = await this.db.list('/orders').push(order);\n    this.shoppingCartService.clearCart();\n    return result;\n  }\n\n  getOrders() { \n    return this.db.list('/orders');\n  }\n\n  getOrdersByUser(userId: string) {\n    return this.db.list('/orders', {\n      query: {\n        orderByChild: 'userId',\n        equalTo: userId        \n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}