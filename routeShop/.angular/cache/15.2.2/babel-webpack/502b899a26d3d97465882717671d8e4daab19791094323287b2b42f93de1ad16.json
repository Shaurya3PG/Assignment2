{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthGuard = void 0;\nvar router_1 = require(\"@angular/router\");\nvar auth_service_1 = require(\"./auth.service\");\nvar router_2 = require(\"@angular/router\");\nrequire(\"rxjs/add/operator/map\");\nvar i0 = require(\"@angular/core\");\nvar i1 = require(\"./auth.service\");\nvar i2 = require(\"@angular/router\");\nvar AuthGuard = /** @class */function () {\n  function AuthGuard(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  AuthGuard.prototype.canActivate = function (route, state) {\n    var _this = this;\n    return this.auth.user$.map(function (user) {\n      if (user) return true;\n      _this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    });\n  };\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n  return AuthGuard;\n}();\nexports.AuthGuard = AuthGuard;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEAA;;;;AAEA;EAGE,mBAAoBC,IAAiB,EAAUC,MAAc;IAAzC,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;EAAY;EAEjEC,+BAAW,GAAX,UAAYC,KAAK,EAAEC,KAA0B;IAA7C;IACE,OAAO,IAAI,CAACJ,IAAI,CAACK,KAAK,CAACC,GAAG,CAAC,cAAI;MAC7B,IAAIC,IAAI,EAAE,OAAO,IAAI;MAErBC,KAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAAEC,WAAW,EAAE;UAAEC,SAAS,EAAEP,KAAK,CAACQ;QAAG;MAAE,CAAC,CAAC;MAC1E,OAAO,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;;qBAXUV,SAAS;EAAA;;WAATA,SAAS;IAAAW,SAATX,SAAS;EAAA;kBAPtB;CAoBC,EAdD;AACaY","names":["require","auth","router","AuthGuard","route","state","user$","map","user","_this","navigate","queryParams","returnUrl","url","factory","exports"],"sourceRoot":"","sources":["C:\\Angular\\routeShop\\src\\app\\shared\\services\\auth-guard.service.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map'; \n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n  \n  canActivate(route, state: RouterStateSnapshot) {\n    return this.auth.user$.map(user => {\n      if (user) return true; \n\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}