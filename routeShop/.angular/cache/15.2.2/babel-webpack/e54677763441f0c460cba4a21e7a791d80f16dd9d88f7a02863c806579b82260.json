{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AdminAuthGuard = void 0;\nvar user_service_1 = require(\"../../shared/services/user.service\");\nvar auth_service_1 = require(\"../../shared/services/auth.service\");\nrequire(\"rxjs/add/operator/map\");\nvar i0 = require(\"@angular/core\");\nvar i1 = require(\"../../shared/services/auth.service\");\nvar i2 = require(\"../../shared/services/user.service\");\nvar AdminAuthGuard = /** @class */function () {\n  function AdminAuthGuard(auth, userService) {\n    this.auth = auth;\n    this.userService = userService;\n  }\n  AdminAuthGuard.prototype.canActivate = function () {\n    return this.auth.appUser$.map(function (appUser) {\n      return appUser.isAdmin;\n    });\n  };\n  AdminAuthGuard.ɵfac = function AdminAuthGuard_Factory(t) {\n    return new (t || AdminAuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.UserService));\n  };\n  AdminAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminAuthGuard,\n    factory: AdminAuthGuard.ɵfac\n  });\n  return AdminAuthGuard;\n}();\nexports.AdminAuthGuard = AdminAuthGuard;","map":{"version":3,"mappings":";;;;;;AACA;AACA;AAGAA;;;;AAEA;EAGE,wBAAoBC,IAAiB,EAAUC,WAAwB;IAAnD,SAAI,GAAJD,IAAI;IAAuB,gBAAW,GAAXC,WAAW;EAAiB;EAE3EC,oCAAW,GAAX;IACE,OAAO,IAAI,CAACF,IAAI,CAACG,QAAQ,CACtBC,GAAG,CAAC,iBAAO;MAAI,cAAO,CAACC,OAAO;IAAf,CAAe,CAAC;EACpC,CAAC;;qBAPUH,cAAc;EAAA;;WAAdA,cAAc;IAAAI,SAAdJ,cAAc;EAAA;uBAR3B;CAgBC,EATD;AACaK","names":["require","auth","userService","AdminAuthGuard","appUser$","map","isAdmin","factory","exports"],"sourceRoot":"","sources":["C:\\Angular\\routeShop\\src\\app\\admin\\services\\admin-auth-guard.service.ts"],"sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { UserService } from '../../shared/services/user.service';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AdminAuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private userService: UserService) { }\n\n  canActivate(): Observable<boolean> { \n    return this.auth.appUser$\n      .map(appUser => appUser.isAdmin);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}